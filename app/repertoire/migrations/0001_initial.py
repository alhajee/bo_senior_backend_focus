# Generated by Django 3.2.11 on 2022-01-07 17:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Contributors name')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, verbose_name='File name')),
                ('work_count', models.PositiveBigIntegerField(verbose_name='Number of works')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iswc', models.CharField(max_length=11, verbose_name='International Standard Musical Work Code')),
                ('title', models.CharField(max_length=255, verbose_name='Music Title')),
                ('source', models.CharField(max_length=50, verbose_name='Metadata provider')),
                ('proprietary_id', models.PositiveIntegerField(verbose_name='Proprietary ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('contributors', models.ManyToManyField(blank=True, to='repertoire.Contributor', verbose_name='Contributors')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to='repertoire.file')),
            ],
        ),
    ]
